<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FavIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pAAAAABJRU5ErkJggg==
</value>
  </data>
</root>