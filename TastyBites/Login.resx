<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAABvCAYAAACpQY/IAAAABGdBTUEAALGPC/xhBQAAJC9JREFUeF7t
        nQuQVNWZx5OqrVRt7VaqtsrFJNaqteBaZdbKksSN0SwCUREhG2UXN4nGBBPA1xJNCeULmIybQZSACT4y
        IAa0opJUSAzJJOuKgiKOQqKQjBmL+MQUKA8Vo4BG7tbv6/u/ffqc2z39mBmmZ86t+ld3n3vuube7v//5
        nufe9427bOL7IiIi8hE0REREFBE0REREFBE0REREFBE0REREFBE0REREFBE0ROTjwOt/+uvk1V8dJvDZ
        7xMx+BA0RJQieedP/5js/+OVyRu/79i77dGnhPde2/JI8vbWecn+Z0+NZBm8CBoiCtj1fNcHkgPPXbj3
        5c6X1vzk1qTlimnJV758XjLlnM8ZZl10XnLXLdclzz75i7cgTyTK4ETQMNQAEYDfhtZA+CHGzJlXJKtX
        r05+t3lT0t39TLLh0fXJiuU/MMJMOOP0ZOHsSwtE+XP3HWgc/xwRzYugYajANZ0Mjrkkclx52VQjxoF3
        3knY3nvvPXvV9ue399n+syadY0S5766FiZle+5891T9fRHMiaBgKQIAxnTZ0LEt+tOwGA2YUpEDA2Xf9
        t1tMY/S0QZqHt7yQXN12U3La6FFJ+4JrEo5PDjz7L/55I5oPQcNgBxEoSID/gJm07aUXk1d27jbTCW0A
        adAEmFHVbmgSSDL/9h+bJoEkpkmiudX0CBoGM97d//b70R6bHrnnIBpCppO7oTUgim9O9bS9sH1X8rNH
        /2AkQZNANMw2/xoimgtBw2BH8tYz30V7QILe3CAbWgSSYG7hwJupFbVIUyNoGOwg0oQJ9OCDD/oy3vC2
        5bkdRpA7f73RHHfTIgeeu9C/hojmQdAw2EGECh9j0cJFvnw3vOHLQBDw31ddZ74IGsu/hojmQdDQjCBv
        sfOR9r9Luq4dvqfjm8fwmmyZNgbwWW3WJ41gXTL1/OTee+6t2deotL32xpsZQfBFWq+6NCGE7OdZIpoH
        QcNAB8K2/+GWDxsBfvuFqcnjn21PHhv1QLLhxKeS9R9/UTi47vh3gNtmfR4b9cC+zoUHn++8O4Ekc+fM
        Nsc8z2GvdXM1yOK7O4wgRLNihr15ETQMRECKdzsvH5ls+vyspHPsT0WAZO3wJHnoqPrw9IxkzzM/O7i4
        bZZFnZ54YqMv7zVv8kGkQczE+nP3HUTP/O8U0RwIGgYSrHJ28/SJRopHjt8TEILPgtrWHJ2PvP5PzzBH
        Gk3C7N/IRi7kVxu3ZgQhkhWd9OZH0DAQYCYU5tOGE58yTZFHijVHJ3/pOCo58JN/SN5afoRh720fSV7/
        3ocNuxd8yKDP7KPP/nuPtGMO3n90sn/r0kTlJOU2EokAApTblCgUOX7ws4cS8izvvrzWCBJ9kOZF0HAo
        YU50SowSrZC+R6hFCIT+1bYjk1e+9eFkR8vhyY65wzJsn32YYcecw0raDS2H2zFv3lsIw+KDVBJ+yIEz
        T9QLIuGIa8NvIUHokoP3mGtk6TvuXVwoYnzrme+iDf3vGzHwETQcKpjT/dioB0o0Rqop3r3vSCMFGsEI
        4Qh7CeYOM9Ig/G/fNy15fenYIokgS0oY2t74ze02y1fje6jeqmXR7UYocij4G65JBfgsU41jKF9pv+22
        gqn15h/uZgLwv3fEwEbQ0N8wPwPnGx8jhxiYRgh0WVI4oN/+da3Jkw+ssHqqP6xbbkQgarXv/pnJ3hUT
        kl0LPmoEog/CW22Yl36QAvPpwhlXmI/xo7VbDC5JXA3Dxme0D+Ut5GD87x8xsBE09CcsMkWI1nO+M2Jc
        d0SPpHC1B1qD2Zqo1OmfHGmvLG7Cz6C8hH07Nv4w2d/9S/uM+VTLpnISMuVfm36pJQNvue8x+yyCQCKf
        dJwHbRWrfJsPQUN/waJT+BqO1sDHwJTKNIZPgnKYO8w0A9qCGqjzTzkxufo/zky+MfHUZPJnPmX43Imf
        tFcRBu2BeQVqiWCpKBFNwrlEEtfMoo+/cT58kqhFmgtBQ3/AHHHXpEq1Bo53IPzVYM5hpj1Y04HmEDm+
        MuakjCC81+eP//NHk3878V+Tz3zseHtPiXq1FbwK52Jakeug5grfxDW12I8moS9j8gqh8F9IHL74yMq/
        9X+TiIGJoKGvEZBjzdEWeq1Zawie9oAEEOSCz37GNAmaA9IAEYL37IdEgD60M8v3lFF38x2YVvgikITM
        ueuLiCiYZCIUS3e3dz+wLVb4Ng+Chr6CrcXIIQcmVRaZ8oW/CuCn4JizKtDVHpADyLyCHAACiRj0Fegr
        klTSJG69FQTBvMIfwXF3fZE8QBAL+8YluU2DoKGv4JMDfwNHPMtj1AlMKyJSOOQSfJlT+BvyPczMGv3p
        Uow5KZk6bvTBWkjilpOgFSCITC1ey5FEGsQIUqWjzqTSKPwxI2pD0NAXsBwHxYIeOXxhrwlzhyV7bv6U
        RaUggkwmBB8yrFx4he27ceYFplkgSkCQFDrWJ4lvbqE93NyHCAJw1tEi+uyHfzHBIAj31KomaYhw33Pr
        9z4569zJP64X110yddmPl9z6EX/sgQK+30C+PhA09Das9NyNVqVmVSDwtSJ1zIkMQQj5HRCBKlpCuUn3
        quQvT92d3L/sW8kXJ55qJlauJkm1iU8SQrPKa7grBvMIgvbA1MJhhwxqd/fVugy3ve1bX0LDBddaJS6a
        ePqbS9paj/PHPZSA+FzTVV/90vwZkyb8cen1103w+wwkBA29CbuFTueYH7p5jszn8AW+RlBKQuIP8wrh
        R7AR/m9MmZzs2vwTI0fyu3sK6FqZbF+3NNMmlYgikkA2SILjT+bcJweQDwIB0B4QAMISrUKjSKtwby2u
        024vVIX2AAiSCAJh/evsCRxzyb+f8epAIQiysGDW5SfP/NJ/3s51MSFNGz92/5AmCH5HVjqydrjVUVny
        L0fga0ZaMoLwI4DSHjjrb3QuL5LDw6Yf3WAkgiSQJY8oIgmv9IEoCucSrpX5BEEgByQy7bBtmVUIUwTJ
        ehOy5/gcZlZxD64qySH4BOE7Av96BXf/QCIIYW3MPTQaxFAAZcgShNnPTCv5HWuHW+UttVT1Rqt8QDTK
        RygnwQc57pgRBoQZh33BJV9OXvi/JQFB9v3mruRX37/Wch9HH3lkdozIImF0nXfeiyjkTyALmgENwTis
        KWFtCYAckMS++4HnLsQhr5UYgksQhKttxkVtzMBfGf3pd3xy0A8hBDomjyBUFmP3t0y/4J9c0PbSjSf/
        TTWOvcZgpWbbjIs+aOt19r/9frSEoApm2umLOeVrQgjCd9TdLYE7ho+88/jn620EDb0BIwgr/WRarUmd
        8l4iB+NQTwU5IAOCjvAi7LyX4ON7oGFcU+vnt8wq6ecDzYIm4s90nXeXLBDJzatAGq4DsnDPXky8gxvP
        TKgx83+bWuAS5OunnfLsnGlfPXzK2JNP8wmi2RgTZsHMy07lvU8Q9mH3X/HFSQ8hrOybOm70DoG2GWdP
        2AgB22ZcdD5k8a8HTcC+S88a/3Prnx5DQADytkyf0nHtBedtAEvaWmfrvHzWNfmkVn/G5Rh9zgPfTeP5
        4PzVkLtWBA29ASsjUUh37XBLBPaG3yEwFgWIFCRiXuGDPLnqFjOfuE+uhXynTA5Nra6V1kdkQrA5Fg3E
        K59FLkW+pFUgC3+oQsnAHOg0O09fjmOcjCBoka5rh/u/T7WAIJyHcyPQ1RLEPQaC3DjzG1fI7ld/E1bH
        3MmENw19QxSXJDKTFDQoOSY179TOK2ThuK+fPvq/fGK41619U88YcxXj6xr9fozPWMDfDyBtUxAEdWcr
        AFOnvLdNKwENwoIklrWCg8/+b0FbpA55QI4URLUwsdAu9MPkog0QGlZSUaaXfBURxoc0CeQieobvYSaW
        FnY9cWab/xtVC4R79tfOvwQww2JG9EQQzBn66hhIJnKYEKfOMZoEgeTVj5QxHm0cr2txNZMJ9LjRBzkW
        IvHKPncMlyC+MOehEkHAoCEIOQ93TUdJSDclSeaoN0AarelguaxFiLpXGSl2r19mQu8Tw9ckEELkUFt7
        y8WZlvAJ4MItXQGYVVwD10NkDY2ZmZcNaJG8ZF9Fgsy8zDL07nGpnyDCtGFmoVGYyNjPGhWEORDMMScl
        9NV5OcYNEHA+xuOc5DM4B6YWggror+vFPPSvGaRaeQf7IQjj+UTTtdCPsQDv3evlmK+dNupG/7fqDQQN
        jSDzPfIc8zSxR1mI1mdQQ1UvSUQQTCmEE7Nm66/bDWiGTPBzADFw4OnLK6SinTAwf5rCvPoDEEBl4wUI
        IpOK0C4aDK1GfoaiS5Kh+h0a9UVcVEOQckC7EDVCmAUcdIiQRxC0g46lrx9B4zPnxReBFIzD+JxHwnrN
        eWf/FefwnXRdM+NiOuLsp2jzNRrnYWzGAlyXroW+Kfk/6H/f3kDQ0AhsfYeTMTftka7kU0EhYVhMIvwH
        PtdLEvkhlK4zJllzhF0oZ2IBCCQyCfTH9EJrSIv4AuH+ub6jjibjGvg+XBsh7UyLkCitM5Llox6CpGZX
        G0JKP76ffCqiYzYj53xHlyAWiTp7wkb5LX5fe++Yb+61VIpi+WHe7Dzu9Yw5KaENbeeOBWjvy2x80NAI
        bGWg1o9vPNPCsGS70RyYHuQKVsy7zGZ7CALo4wt/tUAbYffb+o4F15gGwEknUrW1Y3FADIBmcYnkahKF
        gNEKys77s5kLmWAiCpqMZb5MCETtdDcVMzk3T5/o/171oCJBZl1+st8focL0gRASUF4hBbMypk0gkKlQ
        ugQB+ESMBal8p9y9Fl4RYkwvjssjiK7ZJwhAq/i/u3wi7Uu/w0GZcn2FoKFeEOWw1YEpOSABpgcwx3XT
        XSZAOML4C1rVp1m3Vi0iDQJByElQO8VMrigUIddH7/x2QJDf37fQSAqR8DkgExGwTOt0rbT3kESaJBCe
        FNIigMgZ39Pqw9IkJmtcMi3y+Gfb/d+sVkAABNoniAQIUwNzpuQYz7kGMlnUJ8/xpT9kwIdRjgHzBsIx
        JhqJ/Wm42KJ57vGcg+vhuDyCuNdBIMElN+fIIy2aiZCuPve19gBBQ70w8yq9dxXJMmZ0QqoIH+8RHos6
        tVxsMzU2Owuc0Cqy3X0SVMTcYaZ9SNKx5ptaKe4kohwHBIGQ8i+kPcidcCdFjlFyEeGGMFlisXuVXae0
        iP/nC64Tj6OOyehWCmBiumYWtzPyf7dqgZAiIOXMPsA+nFX3uDyNI+3ApMa45oPkjAexEEg0AX6C5T/O
        nrBRuQ9FzSCMtJR7LSKIBN4nCIBchjPGXOVedzktIu3hjt+XCBrqgTnnlLOnoU0IguAyI0MEtAQkIdPM
        qwli9yprz8ysOYeZcFUd4XIIgnAf3N1pgk9eBMhZt2Shq0Wo0dq33ZbZ4jcoQYj2wbyyPmlEy2q78jSI
        k/sQQfCDMCez6547zJz1EjNry7Qx/m9XLUSQ4Fo8+ARBiDGJfOE05/rsCRsR+tzIUapFOBaCoJkwy7Jx
        xpxkeRaIhnAzjmt2uT4R8gGB/PHd8/gEgVSutvD7o5H6WnuAoKEeGEFUlAjSOxZiyljItXuVCaz8DjN9
        ulaamcVnC7neP7MQ3epceBDfAp+l4k0b5g7LfBAjCHmQNEKF1pApxXlLsum/u6fQd992u98V+QsA0dzI
        F/4MQuASRCaVGwIGaCvXvNI1YmYRyct+lwaiWfUShHCu+RpOgk+v9l75kZyxKhLEhZOA5JVzkdNwlxZD
        FsvHOOd2r8EnCMD0yiMv14uJ5/fvCwQN9cBu3YMJsXWp+R68MqMj/OZzpLMyszkzrbUhtN2rMh+FdoQU
        oGUwhSBNueJGN4rFMZAOoshRx79hjJKqXg8QlHOjadx2iEL4WCqdP0UJRJXNKx/CK+fjWvxqAT6X5EQ6
        x/603poh7P/UFFpdCfgT/rEqEVGZCXkHoNKSSuOiGXDOMbHor2Np51i3TeFezuWvu+f6IQnXAFEgHuAY
        xvF9J8BvxXg+aTnGrzHrKwQN9YCCPMwnhFKZbex/ZbrxRZThRpiZ2W227lppgkwfNA7kArzHTOLVzJYc
        gkAcrUPH/keTQAgjaPcvC1qiAjlK4GkYTEPKT1ROIs3BtTI238EtR+G7ovECP2rusMAPaSTcqzxAT/CP
        ExBaBF1whdgfwwUWAq/useQdaMcUctsrTQD055wIN6afFkzlJfiU7PRzNH6Aoa8RNNQKfjjWWFPWzUyK
        ACGkaAQ0CCXftKusg6gRs7yy3ZhDRhaEOQXCzcwOSXi10KlraqU3asCHYUanchehzcpNfAJUgJ17010G
        kZZr0hoT/hxIgNZDAwKuCccevyVzzrnphE9kzw8hiEEww/8NI0qBTBG+JcMvs0xAU/WX9gBBQz3AQVfk
        yhzdVMjRADKdMIHQJDi/zM4Immvzsw/isN9Mnu5VRjDGxNcoETyy1UvHZmvRGRuSMCazP2CMLKOe1mi5
        5KH94C++nyQ/uKGIld9NkvWFY12CQA60nq6P6BvEgCC8L3HOPYJQSaCsem/mQwYzIIhvWh0K7QGChnpA
        QR65D8wsJeoQQkiC2QNBECj2QRgc5yz8mlbYYvPjj2DG2KycCjpaBE2BA5zdY7flcPNP6MvsvubqGcmV
        X5xkQo0QS6C5DsaAOMp5yN8wctzWlgv2MQ5jMhYOP9dE8pFrlVmIc95THidz1FV28tsvTPV/v4hSiCC+
        M482UfKxvxA01IosgpUmCPVQGkWwRBJmWq0T92dyhM/2r2s1c4XjjWRdK01QMWk4VjVcvOpmDVrDwezC
        ZxEDrcL5+YyWIVKlnAdtPilKgDZZXyAo18BYEBjtCEkgOGTmfGXNKxHkuiNKE4YNRLKGCiCIkpAuiIxV
        8nH6AkFDrXAJIjMCoUFbIIiZmVPGYUaTIHyaiTGdIJRmbKJU+DT4MopwoVUQdASeWf7l+VebUDMWx6At
        ODezPcKtnAgCrtWHEArNw7FA7zOSrFmaERmiMRZmHBqFz1oL36MGcQkCGih/HypApnDe8TVc+JGx/kDQ
        UCtKCLJ2eOHZHTjVG39owo15ozonnxwAwZVJxUyMsEEISAMJIAOCitbAp4F49Bc5zFRKfQc52JCD1ywz
        Lo3VtdLOAxkgCFEoJQMRft/Myq4zDUnLVOM911INQUoKFyNBmg5BQ62wKJZHEPdeuW5WW4RwCwmlQTCj
        pEGYnWXSKEqkxxYodAx5KGMxYoB0PMbGLFMy0iektUGo29oy7VGiOVwNkpqA8j0gp96jiQgtQ9xyuZpI
        kOZH0FArfA1CYswNw9piorQYEGFjBmcWNpKkAszsjU0PqYCVxKc1Wy559FwP/AkcZXvEmUMCyMdxONWV
        yt1N+H1C5Pgg6g8hICukg3yQw+6e8pvbwxB0JMigQtBQK3wNYgTxqm0RrmxhUhq1ynIhThQL4cfJxzRD
        GBFyEQRBRCAtgTdlcjEZ6Ag+54AgKmN3w8gurD3VInmQeaXjIR5mG2RXBXK1C76iD9LcCBpqha9BmC0V
        jlUo1hVaSIHgoTWUYUcIIRGCD0QehVchhm5QjfZQlt43oRhXsz3HliOIYdNdBSKgLVzNsaa4GhGS4pQT
        HEDDiRhWcwUBeiBHQJAYxWo6BA31gFlRBEEYzCZn0dCKCeaHoBHc5bAIHzMyxHGFWI61NAv7IZjCujjF
        +AGQw9ceGXKSguVg5yaLLj+G984+rhFnHIJi+mUaowpiZARpIA/C5MOdRWoBkR6tN6+E1+44a8Tr9045
        fdfNoz5Pdr+aY4YigoZ64Ja6Iwx61gczLeYRWoEZXSSBCAi/1mCU+AupcMvsshzIulabwdEehIDztEdv
        w8y1BdcUlwXribk5JCiLBjPpLFZ69fpjH97Rcvjj1WLndz7WufvW0Q/tuumExa+tOOdcPzQKEfa0j2vd
        ecNH//jqvOHvFjBi7+5bT7mzp4eMcj2vrZh8cU/9BhOChnrAn647mSAMulGDbqzghnshCGTBl5BvAlSr
        BWRuqVhRZe0cg+Yoqz16CRDYymLyylxqQYO1WHvax5+A8AbjVkJaaYCZi/D7go/WsDG92ja0PoTyrwEt
        hrYRqXYu+kR3Iwu/mg1BQz3gT89uFLfm6MKj1FJTBAGnpgpfAmJIMwDeA8iDrY/vQTuh4azcve1IM7FY
        3ER7RfOqFyAzT6X5tpirVs3hCF4j1bwZQSqdvweTD8Hfs2R89lxE/qtX5x+7PSDIvOHvugSxatrOy0e+
        tnzSYohhfuXcYQnvI0FqhNaDlORC0j8O80SZdd3FkEcB8KwMwHpyStZ55Z63mFL0J6TLn6toWB5BMh/C
        RY7QVwPGshxNegMH/A/8p7qWA6doZD0IAmom1vxjt/vrTASEmhkdVOqH2SVTyzTCinPOxQwrCP6HtrIf
        08n1Q0Qkf8xIkDpQNpLFj4qZsXSshW9FCJ6fwV3SAe/1CDOex4Gg+uFTzBwIVmJiQQbyGXlwchjVALNO
        5p+ANkOL+asEa0GjKwoRarTIrptPftIf2yafm09+kpvSYULRD+EN+hXwuG5M/cr/HPX3oGA2jT8B8J42
        3WqUV0gEAf3vzjk4hv55a084BwTClIN0BZxzrl1fD76LJgVdl6Hjm8dAXF23QF//+L5A0FAPjCBy1D0/
        RFqEKBQ3SoAU3FyB9wJLX7u7n7E7k6jkJPtT5hxmszizeUmI19UabhTKJU4OGXxiSGu4wOzDb+qpELEi
        emlNOhqH2T5vfAiiWR8yoQmCfi2HJ+a0P9/1AQR058KRHWiNPMjE2nnDcbPztAd4pfWIffSFdAiwKwMI
        s/k8aKbWI/bpHgOGeSP2cn34MnkayO6ectMJZs7R146fN2Iv18E1cz5dJ+for6hb0FAvSvyQh44q3s09
        jWYxG/NEWB5hpscjcycS91mAkIV+WXbaM9PQIPgy0iJoG8tliByp5sjac0wuZfMhhq81ZF4p99GQg95L
        dzVBEHIJotl8yfgrmaURGoTK74OAMZszlhFk0Se6s/2O/1Jw0idfTD8E1R/HB+dyCcI5Ml/F7ed95jx8
        HwihY7ku2uTn6DjBPzd9m44g7n2x/IShbhonguixZv6GBsGh1wIkiIKQAi3AQosgwJmp5ZtWvpnl3IdX
        DrhPCh+QsO7bEUkQcu6LVY9ZUIkgQp4Q0YaGETlARpAck7FWgvCELxEEYffNO84vjcGre422b+HIDplc
        frSOa+EayNEwAeh4oSkJAkrurJiaWfyQimTxhKZKBFm9enV2AwSiR+RAmMkxdwjzAhYp6T5UjKnHHpD1
        JjysxVK8Cqqjoq/Wcyi87IP+boFknjD1iDzzqob8h4tqCKJz+m3Kb2i2LszUp9yZFzp2CWK5Dhz/nCJM
        joV4pgVSgiDMPknpJ3IaAYiclewvRs0ggqv9Mi3TPq6VfebPLJ+0OMOKyRdXG+xoFEFDIzAzy3mqlKJZ
        CDs5BR5XxqPLuCdV3vbEExvtXlX4GPgakIEIl+ur4MPg1BPxElnQKix/BbSxj2pfPdTGfa9aLpxwLa6C
        QLwqEJDdLKJO7YGwlESvagzvuihLEAvNjthrMzFI7X6/nz9bcx1547kEMZ9y8/SJgZOehnkJDHBd9DOt
        5Ps+3ONs/rHbIQACbg6/RxDTcDedsJjz5Yaz5w4raAx8EfwQIm3LJy1GxurRxPUiaGgEfjRLd3dX0SIR
        KwjywvZdPjds2/bSi5mAEhKGFPgr2nhGOY89I9pF+4ZH1xsZ0Dw4/no0GufBnIOQPE+QZwlCLD6jxRgD
        kkEYyAUJ0VK8Ekq2R6mta62p5sr9Y3vz7u6VCMJMjoAym+LfpM5scE1uErDceC5BQCGhmB/Fcn0phaL9
        fgg3ZmaGNGSfZyphnptm6yEgYmPOG7EXzeJXCPQVgoZG4WbVATOpsukIaSWCYHohpCIHDjygnafMKlcC
        kSAIYWO0ijYiYRzHGAi/HssMMQQRhGPpC8kYn4ABr/hBHK+qXYiCL6TyGf9P8xFojwaeDwLKCbQI4goK
        M6xv6uiaECr6lIuK+RqkUYLQxjnxIXLRPq7VNExqKvE9OT+lNRbFyvkehpykZl8iaGgUfFH3CVMICgRB
        WJnJIQiaIG+DDPRDQCER0OOXIQezPQLNhsbgccsItr9hwtEPYaePkpK8p43HOkMyN4LmbhwrkuEDEVnj
        O9i9r/w/zPvzSkpLGixvRxARet88EfATMGEyZ7ZMHkQEsVBsmbyKTB5yDJw7I4jfr/WIfeZAU+t1x1kj
        +L/zNJeZWHecNULfRXkXXtF6rpMNSTCd2K/8Cd/HDRn74xOK9n+vvkDQ0Bvwn1H4/C/Gm+Dr8cnlCMKG
        +YQw48zreeSYSyyxRbjZ0BT4Kgh5NZs0US0b2gTthMaCmGhANEqlBVJB5KpB7ZFrm+cIbCE3UWnGLTjM
        uf6C08+E/+ZRn+fcCHI5YhrmFKNYNvN7Dr0Ih4axcy/6RHfmT1DTZdn7ghZgIoC0lvdIcx8QhPZC4nBc
        q0tWxm5qgpgv4jzlFl+E6JAEHq1QTmDRDMze6otZhPNNm0whNAF+hzbacfDLRcca2SAhhIUk+CeVkoeW
        93A0ZyO+B/DDn/UgC5kqUejmQXyY2VYgSEUypcQUQTIfwruXsvkM84/dXvId0v1ch6Jr5j+h/XRsWjxJ
        G+ZgSX7FIbz/e/UFgobeQklEKw11Prj+/h4JgvnDrC3nWo40d27XfgTWdd7RLGgYtI+/QSg0TrnIWaVN
        j1TA5OK8yuSbqeVFXEocc0BOqM7Ilfsbyh6vBQiXRbgQwiXjr5SfIoL4/QWXIExyvC+XUS84y8VEIWPL
        HCzp7xOG+rGFIzvcquaMIG6/tvTJyByfjmHtqXZpyjCvD8pPXIf95YenG0Ewn/J8BzaEGYJADvwOBB8h
        ZZNjLj9Em+7SLhPM3RBsNBAmXrlzltsY1z03WoxwdUmFb97DcjAv6ygr8SEfpFrI8VXtk5+5t9ouMu85
        xxbHKAo9YKY27YDzfP2xDyPcaCRbbOUJKZ85PvMfvvOxTv84SOfXZFmZzA3HzZZvw3tz4Hm/cGQHWsTy
        OTj97eNPaNowr4+Cw54+FsEhicpN/A2twkxv4dZFt2fP/pPphLDnOeZ8xhTy29kgE+SBWHn7y20QlXO5
        ZhsEJImY3ck9NQUsauWaVk+c2ScPta8WuuG0305bXntP4BiEmCJGnxTl4B7jHlft+dUPGQLVnre3ETT0
        NnBSs1L4VICICpXzFyAOs73uhijTSr6Hrz162iAd5Cl3vryNYzDX/HMpuiU/BJIEfgcRvAZNq4iBg6Ch
        L4C54fojJkjblpUInzaEE9OKW4qSp9AGUfK0R19sOPx550KrQBDdLM7IoZAuYCJoIGoVMfAQNPQVrBze
        qfYtRxKEUlluN6GIeeNGrqQZENpyDn89GyYeiUTMOXfjHJiGXJslEDGrXHIwAfSC3xExsBA09CVKSAJB
        UpK4Ao7AY165GXLMI2Z0NxIFOVRnVW0+pNIGMSEkwQH8Fd8k49xE1iiZwY9y/SojR53FiBEDG0FDXyNX
        kzw9w54ZyKY8iCugyoq7GwKrgsVyBMGfwVzqKcRLP5KXyrsocuXuJzRNmJqkZ6A5IjkGLYKG/kAeSXh0
        As81xP9wTSk2yIGgu5siXuXqutj0WGi0TzkzjDFUzqKsvQIDbBwHebi7vBuyjuQYGgga+gtWjuI67mky
        kbJzd8ZHk+Cs+yZPNRtEIxKmwkd3w6RC8N2SFkwoCOKeC+0UmFS833DiU7XcwieiORE09Ccs207G2RM+
        tAlrQhBqfBLf5Kl2U37Ez7lAAFdrCPgfme+DybdtmV2LT2LL7cRo1ZBA0NDfsFsGcetS1+TSLP30DLuX
        lp+PqHeTr+FqDRdoEDOvRAyXuDKpfvuFqf213DPi0CNoOFSwXImvTdKluyashIT3bQ9MpWo2RajKEQPg
        gGNK5RGjoDXG/jSaVEMPQcOhhN34AQeehJs/eztaxWb43Z09EkbEyDOnIASON6QIfAyXGJA2ao0hi6Bh
        IIAiOxEliBw5ZLHZHsKkpLG7Lu7uNPAecwkSAMpbgAhh4+aQwieGX1gXMbQQNAwkmH9CtIv6JnyUPIF2
        cxIpcYw8IoDgH+eDPvgYOOCbp0+MxIgAQcNAgio6tSTTbisEWdZ//MVKGqAqcCykw5yDFGisrmuHV1tt
        GjE0EDQMdCDAZoLh1EMYVi5iDiHoaADwyPF7IJCRCBKonT705RgIsWXaGMYSKeotB48YvAgamgG+EJtz
        jznWde1wlnGatsE02zx9ot0MoOObx+gmz4dqXUFEcyJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiI
        KCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiIKCJoiIiI
        KCJoiIiIKCJoiIiIKOL/ARD4F7eNNzxbAAAAAElFTkSuQmCC
</value>
  </data>
</root>